version: '3'

services:

  front:
    image: mailu/nginx:$VERSION
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
         - node.labels.prod == false
    restart: always
    env_file: .env
    environment:
      - LETSENCRYPT_HOST=mail.dev.fjorlande.org
      - LETSENCRYPT_EMAIL=it-dev@fjorlande.org
      - VIRTUAL_HOST=mail.dev.fjorlande.org
      - VIRTUAL_NETWORK=proxyhttp_mail_network
      - VIRTUAL_PORT=80
    ports:
    - "$BIND_ADDRESS4:80:80"
    - "$BIND_ADDRESS4:443:443"
    - "$BIND_ADDRESS4:110:110"
    - "$BIND_ADDRESS4:143:143"
    - "$BIND_ADDRESS4:993:993"
    - "$BIND_ADDRESS4:995:995"
    - "$BIND_ADDRESS4:25:25"
    - "$BIND_ADDRESS4:465:465"
    - "$BIND_ADDRESS4:587:587"
    - "$BIND_ADDRESS6:80:80"
    - "$BIND_ADDRESS6:443:443"
    - "$BIND_ADDRESS6:110:110"
    - "$BIND_ADDRESS6:143:143"
    - "$BIND_ADDRESS6:993:993"
    - "$BIND_ADDRESS6:995:995"
    - "$BIND_ADDRESS6:25:25"
    - "$BIND_ADDRESS6:465:465"
    - "$BIND_ADDRESS6:587:587"
    volumes:
      - "$ROOT/certs:/certs"
    networks:
      - mailu
      - webproxy

  redis:
    image: redis:alpine
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
         - node.labels.prod == false
    restart: always
    volumes:
      - "$ROOT/redis:/data"

  imap:
    image: mailu/dovecot:$VERSION
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
         - node.labels.prod == false
    restart: always
    env_file: .env
    volumes:
      - "$ROOT/data:/data"
      - "$ROOT/mail:/mail"
      - "$ROOT/overrides:/overrides"
    depends_on:
      - front

  smtp:
    image: mailu/postfix:$VERSION
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
         - node.labels.prod == false
    restart: always
    env_file: .env
    volumes:
      - "$ROOT/data:/data"
      - "$ROOT/overrides:/overrides"
    depends_on:
      - front

  antispam:
    image: mailu/rspamd:$VERSION
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
         - node.labels.prod == false
    restart: always
    env_file: .env
    volumes:
      - "$ROOT/filter:/var/lib/rspamd"
      - "$ROOT/dkim:/dkim"
      - "$ROOT/overrides/rspamd:/etc/rspamd/override.d"
    depends_on:
      - front

  antivirus:
    image: mailu/$ANTIVIRUS:$VERSION
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
         - node.labels.prod == false
    restart: always
    env_file: .env
    volumes:
      - "$ROOT/filter:/data"

  webdav:
    image: mailu/$WEBDAV:$VERSION
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
         - node.labels.prod == false
    restart: always
    env_file: .env
    volumes:
      - "$ROOT/dav:/data"

  admin:
    image: mailu/admin:$VERSION
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
         - node.labels.prod == false
    restart: always
    env_file: .env
    volumes:
      - "$ROOT/data:/data"
      - "$ROOT/dkim:/dkim"
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - redis

  webmail:
    image: "mailu/$WEBMAIL:$VERSION"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
         - node.labels.prod == false
    restart: always
    env_file: .env
    volumes:
      - "$ROOT/webmail:/data"

  fetchmail:
    image: mailu/fetchmail:$VERSION
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
         - node.labels.prod == false
    restart: always
    env_file: .env
    volumes:
      - "$ROOT/data:/data"
networks:
  default:
     external:
       name: mailu
  proxy:
    external:
      name: webproxy 
